package com.mycompany.myapp;

import static com.codename1.ui.CN.*;

import com.codename1.components.MediaPlayer;
import com.codename1.io.Log;
import com.codename1.ui.BrowserComponent;
import com.codename1.ui.Button;
import com.codename1.ui.Command;
import com.codename1.ui.Component;
import com.codename1.ui.Display;
import com.codename1.ui.FontImage;
import com.codename1.ui.Form;
import com.codename1.ui.Image;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.animations.CommonTransitions;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.plaf.Border;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.util.UITimer;
import java.io.IOException;
import java.util.Date;

import com.codename1.ui.Toolbar;
import com.codename1.io.NetworkEvent;
import com.codename1.l10n.L10NManager;
import com.codename1.media.Media;
import com.codename1.media.MediaManager;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
                
        final Form hi = new Form("DTC-mobile", new BorderLayout());
        
		
        BrowserComponent browser=new BrowserComponent();
        
      
		browser.setURL("https://google.fr"); 
		
		try {
			Image iconDTC = FontImage.createImage("/dtc.ico");
			Image iconRefresh = FontImage.createImage("/refresh.ico");
			Image iconHome = FontImage.createImage("/home.ico");
			Label titleButton = new Label("-mobile", iconDTC, "Label");
			
			/*
			 * 
			 *  Ce segment de code dÃ©crit comment on peut rendre un bouton cliquable dans un toolbar
			 
			
			Button b = new Button("mobile",icon);
			b.getAllStyles().setBorder(Border.createEmpty());
			//b.getAllStyles().setAlignment(Component.RIGHT);
			hi.getToolbar().addCommandToRightBar("", icon, (e) -> {
				hi.removeAll();
			});
			b.addActionListener((e) -> Log.p("Clicked"));

			b.addActionListener(new ActionListener() {
			  

				@Override
				public void actionPerformed(ActionEvent evt) {
					// TODO Auto-generated method stub
					 hi.getContentPane().addPullToRefresh(() -> {
						    hi.add("Pulled at " + L10NManager.getInstance().formatDateTimeShort(new Date()));
						});
					 
					
				}
			});
			
			hi.getToolbar().setTitleComponent(b);
			hi.getToolbar().setTitleCentered(true);*/
			
hi.getToolbar().addCommandToLeftBar("", iconHome, (e) -> {
				
				hi.getContentPane().refreshTheme();
				browser.refreshTheme();

				browser.setURL("https://google.fr"); 
			});
			
			hi.getToolbar().addCommandToRightBar("", iconRefresh, (e) -> {
				
				hi.getContentPane().refreshTheme();
				browser.refreshTheme();
				//browser.setURL(browser.getURL()+"/search?client=ubuntu&channel=fs&ei=uoJtW6P7K4KWlwS774CIDQ&q=how+to+refresh+a+page+wirh+browserBomponent+codename+one&oq=how+to+refresh+a+page+wirh+browserBomponent+codename+one&gs_l=psy-ab.3..33i10k1.1390317.1401720.0.1402800.22.22.0.0.0.0.205.3221.0j17j1.18.0....0...1c.1.64.psy-ab..4.4.753....0.4Ar5YDWLAsk"); 
				browser.setURL(browser.getURL());
				//browser.setURL("https://google.fr"); 
			});
			
			
			Command backCommand = new Command("BackButton") {
	            @Override
	            public void actionPerformed(ActionEvent evt) {
	                browser.back();
	            }
	        };

	        hi.getToolbar().setBackCommand(backCommand);
			
			hi.getToolbar().setTitleComponent(titleButton);
			
	        hi.getToolbar().setTitleCentered(true);
	        
		    
		    
			
	        
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}     
		
        //browser.setURL("http://192.168.1.3/dtc/login");
		 hi.removeAll();
		 hi.add(BorderLayout.CENTER, browser);
		 hi.revalidate();
		 hi.show();
       
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
